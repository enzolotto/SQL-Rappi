SELECT WEEK,
       vertical,
       LEVEL,
       COUNT(*) AS DIAMOND_ORDERS,
       SUM(DIAMOND_ORDERS) OVER (PARTITION BY WEEK, vertical) AS TOTAL_ORDERS,
       ROUND(DIAMOND_ORDERS/TOTAL_ORDERS*100,2) AS PERCENTAGE_DIAMOND
FROM (SELECT
	DATE_TRUNC('week', o.created_at::DATE) AS week,
	o.order_id,
	o.country,
    o.city,
    o.sub_group as vertical,
	d.storekeeper_id,
	IFNULL(s.level_name, 'rookie') AS level
FROM
	co_writable.gortallordersmaster o
	JOIN global_finances.global_order_details d
	ON o.order_id = d.order_id AND o.country = d.country AND o.COUNTRY IN ('BR')
	LEFT JOIN (
		SELECT
			'BR' AS country,
			s.storekeeper_id,
			s.created_at::TIMESTAMP_NTZ AS starts_at,
			LEAD(starts_at, 1, CURRENT_TIMESTAMP::TIMESTAMP_NTZ) OVER (PARTITION BY s.storekeeper_id ORDER BY s.created_at) AS ends_at,
			l.level_name
		FROM
			br_pg_ms_sk_score_history_public.sk_level s
			LEFT JOIN br_pg_ms_sk_score_history_public.level l
			ON s.level_id = l.id
		QUALIFY
			ends_at::DATE >= '2020-10-05'

) s
	ON o.country = s.country AND d.storekeeper_id = s.storekeeper_id AND o.created_at::TIMESTAMP_NTZ BETWEEN s.starts_at AND s.ends_at

WHERE
	o.created_at::DATE >= '2020-10-05'
	AND o.order_state IN ('finished', 'pending_review')
            AND city ilike ('%saopaulo%') AND vertical IN ('Super','Express')
 ) GROUP BY 1,2,3
 QUALIFY LEVEL = 'diamond'

WITH SK_LEVEL AS (
SELECT *
  FROM (
SELECT
'BR' AS COUNTRY,
s.STOREKEEPER_ID, 
L.LEVEL_NAME,
DATE_TRUNC(week, S.CREATED_AT)::DATE AS week
FROM BR_PG_MS_SK_SCORE_HISTORY_PUBLIC.SK_LEVEL S 
JOIN BR_PG_MS_SK_SCORE_HISTORY_PUBLIC.LEVEL L
ON S.LEVEL_ID = L.ID 

UNION ALL

SELECT
'CO' AS COUNTRY,
s.STOREKEEPER_ID, 
L.LEVEL_NAME,
DATE_TRUNC(week, S.CREATED_AT)::DATE AS week
FROM CO_PG_MS_SK_SCORE_HISTORY_PUBLIC.SK_LEVEL S 
JOIN CO_PG_MS_SK_SCORE_HISTORY_PUBLIC.LEVEL L
ON S.LEVEL_ID = L.ID 

UNION ALL

SELECT
'MX' AS COUNTRY,
s.STOREKEEPER_ID, 
L.LEVEL_NAME,
DATE_TRUNC(week, S.CREATED_AT)::DATE AS week
FROM MX_PG_MS_SK_SCORE_HISTORY_PUBLIC.SK_LEVEL S 
JOIN MX_PG_MS_SK_SCORE_HISTORY_PUBLIC.LEVEL L
ON S.LEVEL_ID = L.ID 


  )
  QUALIFY ROW_NUMBER() OVER (PARTITION BY STOREKEEPER_ID ORDER BY week DESC) = 1
)
  
SELECT LEVEL_NAME,
        COUNTRY,
        week,
        n_sk
FROM (
SELECT COUNTRY,
       week,
       LEVEL_NAME,
       COUNT(DISTINCT STOREKEEPER_ID) AS  N_Sk
FROM sk_level

WHERE level_name in ('diamond','bronze','silver')
GROUP BY 1,2,3)
